-------------------------------- CLEANING & UPDATING TABLE ----------------------------------------------------------------------------------------
--      **** Data cleaning, Label encoding on categorical variables & Standardization on numerical variables ****
---------------------------------------------------------------------------------------------------------------------------------------------------
UPDATE property_sales
SET  
overallqual =CASE 
				WHEN overallqual = 'Very Poor' THEN '1'
				WHEN overallqual = 'Poor' THEN '2'
				WHEN overallqual = 'Fair' THEN '3'
				WHEN overallqual = 'Below Average' THEN '4'
				WHEN overallqual = 'Average' THEN '5'
				WHEN overallqual = 'Above Average' THEN '6'
				WHEN overallqual = 'Good' THEN '7'
				WHEN overallqual = 'Very Good' THEN '8'
				WHEN overallqual = 'Excellent' THEN '9'
				WHEN overallqual = 'Very Excellent' THEN '10'
			ELSE overallqual
			END;

UPDATE property_sales
SET  
overallcond =case 
				when overallcond = 'Very Poor' then '1'
				when overallcond = 'Poor' then '2'
				when overallcond = 'Fair' then '3'
				when overallcond = 'Below Average' then '4'
				when overallcond = 'Average' then '5'
				when overallcond = 'Above Average' then '6'
				when overallcond = 'Good' then '7'
				when overallcond = 'Very Good' then '8'
				when overallcond = 'Excellent' then '9'
				when overallcond = 'Very Excellent' then '10'
			ELSE overallcond
			END;

CREATE TABLE temp_task5
 (id integer,
 lotfrontage_std varchar(50),
 lotarea_std double precision,
 garagearea_std double precision,
 grlivarea_std double precision,
 totalbsmtsf_std double precision,
 saleprice_std double precision);
 
INSERT into temp_task5
(id,
 lotfrontage_std,
 lotarea_std,
 garagearea_std,
 grlivarea_std,
 totalbsmtsf_std,
 saleprice_std)
Select id,
	((CASE WHEN lotfrontage = 'NA' THEN null ELSE CAST(lotfrontage AS FLOAT) END) - AVG(CASE WHEN lotfrontage = 'NA' THEN null ELSE CAST(lotfrontage AS FLOAT) END) OVER()
	 	/STDDEV_SAMP(CASE WHEN lotfrontage = 'NA' THEN null ELSE CAST(lotfrontage AS FLOAT) END) OVER()) AS lotfrontage_std,
	(lotarea - AVG(lotarea) OVER())/(STDDEV_SAMP(lotarea) OVER()) AS lotarea_std, 
	(garagearea - AVG(garagearea) OVER())/(STDDEV_SAMP(garagearea) OVER()) AS garagearea_std,
	(grlivarea - AVG(grlivarea) OVER())/(STDDEV_SAMP(grlivarea) OVER()) AS grlivarea_std,
	(totalbsmtsf - AVG(totalbsmtsf) OVER())/(STDDEV_SAMP(totalbsmtsf) OVER()) AS totalbsmtsf_std,
	(saleprice - AVG(saleprice) OVER())/(STDDEV_SAMP(saleprice) OVER()) AS saleprice_std
FROM property_sales;

ALTER TABLE property_sales
ADD COLUMN lotfrontage_std varchar(50),
ADD COLUMN lotarea_std double precision,
ADD COLUMN garagearea_std double precision,
ADD COLUMN grlivarea_std double precision,
ADD COLUMN totalbsmtsf_std double precision,
ADD COLUMN saleprice_std double precision


UPDATE property_sales
SET lotfrontage_std =temp_task5.lotfrontage_std,
	lotarea_std = temp_task5.lotarea_std,
	garagearea_std = temp_task5.garagearea_std,
	grlivarea_std = temp_task5.grlivarea_std,
	totalbsmtsf_std = temp_task5.totalbsmtsf_std,
	saleprice_std = temp_task5.saleprice_std
FROM temp_task5
WHERE property_sales.Id = temp_task5.Id;

UPDATE property_sales
SET lotfrontage_std = 'NA'
WHERE lotfrontage_std IS null;

DROP TABLE temp_task5;
 
SELECT * FROM property_sales
ORDER BY id;

COPY property_sales TO 'C:\Users\Public\property_data_newfeatures.csv' DELIMITER ',' CSV HEADER;
---(After running the command, you can find the clean file in the public folder, use windows search button to find the file>>open file location)
---I also uploaded the clean file. Thank you for checking my work :)
